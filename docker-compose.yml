
version: '3'

services:
  app:
    build:
      context: .
    depends_on:
      - pg
      - redis
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - PG_HOST=pg
      - PG_PORT=5432
      - PG_PASSWORD=password
      - PG_USER=user
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEBUG=0

  django-channels-worker:
    build:
      context: .
    depends_on:
      - redis
      - pg
      - app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - PG_HOST=pg
      - PG_PORT=5432
      - PG_PASSWORD=password
      - PG_USER=user
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEBUG=0
    command: python manage.py runworker realtime-event-sender

  pg:
    image: mdillon/postgis:9.5-alpine
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=meeting_app_backend
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:5432:5432

  redis:
    image: redis:3.0.6-alpine

  nginx:
    image: nginx:alpine
    depends_on:
      - app
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - /www/data/:/www/data/
      - /etc/ssl/:/etc/ssl/
    ports:
      - 443:443
      - 80:80

volumes:
  db-data:
